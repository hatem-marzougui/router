{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hatem\\\\Desktop\\\\Router\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Login = props => {\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n\n  const login = () => {\n    fakeAuth.authenticate(() => setRedirectToReferrer(true));\n  };\n\n  const {\n    from\n  } = props.location.state || {\n    from: {\n      pathname: \"/admin\"\n    }\n  };\n\n  if (redirectToReferrer) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: from,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"You must log in to view the page at \", from.pathname), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Log in\"));\n};\n\nexport const fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 100);\n  }\n\n};\nexport default Login;","map":{"version":3,"sources":["C:/Users/hatem/Desktop/Router/src/components/Login.js"],"names":["React","useState","Redirect","Login","props","redirectToReferrer","setRedirectToReferrer","login","fakeAuth","authenticate","from","location","state","pathname","isAuthenticated","cb","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAIA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,CAAC,KAAD,CAA5D;;AAEA,QAAMM,KAAK,GAAG,MAAM;AAClBC,IAAAA,QAAQ,CAACC,YAAT,CAAsB,MAAMH,qBAAqB,CAAC,IAAD,CAAjD;AACD,GAFD;;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAWN,KAAK,CAACO,QAAN,CAAeC,KAAf,IAAwB;AAAEF,IAAAA,IAAI,EAAE;AAAEG,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAzC;;AAEA,MAAIR,kBAAJ,EAAwB;AACtB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEK,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAGD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAwCA,IAAI,CAACG,QAA7C,CADF,eAEE;AAAQ,IAAA,OAAO,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMD,CApBH;;AAsBE,OAAO,MAAMC,QAAQ,GAAG;AACtBM,EAAAA,eAAe,EAAE,KADK;;AAEtBL,EAAAA,YAAY,CAACM,EAAD,EAAK;AACf,SAAKD,eAAL,GAAuB,IAAvB;AACAE,IAAAA,UAAU,CAACD,EAAD,EAAK,GAAL,CAAV;AACD;;AALqB,CAAjB;AAST,eAAeZ,KAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nconst Login = props => {\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n  \r\n    const login = () => {\r\n      fakeAuth.authenticate(() => setRedirectToReferrer(true));\r\n    };\r\n  \r\n    const { from } = props.location.state || { from: { pathname: \"/admin\" } };\r\n  \r\n    if (redirectToReferrer) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    \r\n  \r\n    return (\r\n      <div>\r\n        <p>You must log in to view the page at {from.pathname}</p>\r\n        <button onClick={login}>Log in</button>\r\n      </div>\r\n    );  \r\n  };\r\n\r\n  export const fakeAuth = {\r\n    isAuthenticated: false,\r\n    authenticate(cb) {\r\n      this.isAuthenticated = true;\r\n      setTimeout(cb, 100);\r\n    }\r\n  };\r\n \r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}